package com.essamine.repositories;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import javax.naming.Context;
import javax.naming.InitialContext;
import javax.naming.NamingException;
import javax.sql.DataSource;

import com.essamine.entities.Passport;

public class PassportRepository {
	private final DataSource ds;

	public PassportRepository() {
		try {
			Context ctx = new InitialContext();
			try {
				ds = (DataSource) ctx.lookup("java:comp/env/jdbc/personDB");
			} finally {
				ctx.close();
			}

		} catch (NamingException e) {
			throw new RuntimeException(e);
		}

	}

	public void init() throws SQLException {
		Connection cnt = ds.getConnection();
		try {
			Statement stmt = cnt.createStatement();
			try {
				String sql = "create table if not exists passport(id integer generated by default as identity primary key,"
						+ "passportnumber varchar(255),valid_date date)";
				stmt.execute(sql);
			} finally {
				stmt.close();
			}
		} finally {
			cnt.close();
		}
	}

	public Passport find(long id) throws SQLException {
		Connection cnt = ds.getConnection();
		try {
			Statement stmt = cnt.createStatement();
			try {
				String sql = "select * from passport where passport.id=" + id;
				ResultSet rs = stmt.executeQuery(sql);
				try {
					if (!rs.next()) {
						return null;
					} else {
						return format(rs);// return a passport
					}
				} finally {
					rs.close();
				}
			} finally {
				stmt.close();
			}
		} finally {
			cnt.close();
		}

	}

	public void create(Passport passport) throws SQLException {
		Connection cnt = ds.getConnection();

		try {
			Statement stmt = cnt.createStatement();
			try {
				String sql = "insert into passport(passportnumber,valid_date) values('" + passport.getPassportNumber()
						+ "','" + "" + passport.getValid_date() + "')";
				stmt.executeUpdate(sql, Statement.RETURN_GENERATED_KEYS);
				ResultSet rs = stmt.getGeneratedKeys();
				try {
					if (rs.next())
						passport.setId(rs.getLong("id"));
				} finally {
					rs.close();
				}
			} finally {
				stmt.close();
			}
		} finally {
			cnt.close();
		}

	}

	public void update(Passport passport) throws SQLException {
		Connection cnt = ds.getConnection();
		try {
			Statement stmt = cnt.createStatement();
			try {
				String sql = "update passport set passportnumber='" + passport.getPassportNumber() + "',"
						+ "valid_date='" + passport.getValid_date() + "' where id=" + passport.getId();
				stmt.executeUpdate(sql);
			} finally {
				stmt.close();
			}
		} finally {
			cnt.close();
		}
	}
	
	
	public void delete(Passport passport) throws SQLException {
		Connection cnt = ds.getConnection();
		try {
			Statement stmt = cnt.createStatement();
			try {
				String sql = "delete from passport where id=" + passport.getId();
				stmt.executeUpdate(sql);
			} finally {
				stmt.close();
			}
		} finally {
			cnt.close();
		}
	}
	
	public Passport format(ResultSet rs) throws SQLException {
		Passport passport = new Passport();
		passport.setId(rs.getLong("id"));
		passport.setPassportNumber(rs.getString("passportNumber"));
		passport.setValid_date(rs.getDate("valid_date"));

		return passport;
	}

}
